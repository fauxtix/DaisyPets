<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnPets.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AMUW6AAAAABJRU5ErkJggg==
</value>
  </data>
</root>