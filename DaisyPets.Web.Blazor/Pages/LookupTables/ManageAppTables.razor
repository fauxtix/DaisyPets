@page "/admin/adminpanel"

@inject NavigationManager NavManager

@using System.Dynamic
@using DaisyPets.Core.Application.Extensions
@using DaisyPets.Web.Blazor.Pages.CodeBehind.LookupTables;
@using System.Net.Sockets;
@using static DaisyPets.Core.Application.Enums.Common;


@inherits TabAuxBase

@*@attribute [Authorize]*@

@implements IDisposable


<AppConfiguration_Tables ChildTableToValidate="@sTableToValidateFk"
                         ItemsList="@GenericModelList"
                         FkFieldNameToValidate="@sFieldToValidateFk"
                         PageTitle="@sPageTitle"
                         WorkTableName="@SelectedTableByAdmin"
                         TModel="ExpandoObject">
</AppConfiguration_Tables>

<AlertUserComponent AlertMessageType="AlertMessageType.Warning"
                    Title="@AlertTitle"
                    OperationType="OpcoesRegisto.Warning"
                    Visibility="@AlertVisibility"
                    Message="@WarningMessage"
                    OnCloseDialog="(()=>AlertVisibility=false)"></AlertUserComponent>


@code {

    string? SelectedTableByAdmin;
    string? sPageTitle;
    string? sTableToValidateFk;
    string? sFieldToValidateFk;

    protected string? AlertTitle = "";
    protected bool AlertVisibility { get; set; } = false;
    protected string? WarningMessage { get; set; }

    protected override async Task OnInitializedAsync()
    {

        NavManager.TryGetQueryString<string>("DataTable", out SelectedTableByAdmin);
        NavManager.TryGetQueryString<string>("PageTitle", out sPageTitle);
        NavManager.TryGetQueryString<string>("TableToValidate", out sTableToValidateFk);
        NavManager.TryGetQueryString<string>("FieldToValidate", out sFieldToValidateFk);

        try
        {
            GenericModelList = (await GetDataGenerics<ExpandoObject>(SelectedTableByAdmin)).ToList();
        }
        catch (SocketException socketEx)
        {
            AlertTitle = "Erro ao aceder ao servidor ";
            AlertVisibility = true;
            WarningMessage = socketEx.Message;
        }
        catch (Exception ex)
        {
            AlertTitle = "Erro ao aceder ao servidor ";
            AlertVisibility = true;
            WarningMessage = ex.Message;
        }
    }

    void IDisposable.Dispose()
    {
        ToastObj?.Dispose();
    }
}
