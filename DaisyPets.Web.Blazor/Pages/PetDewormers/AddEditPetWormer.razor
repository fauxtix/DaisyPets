@using DaisyPets.Core.Application.Formatting;
@using DaisyPets.Core.Application.ViewModels;
@using DaisyPets.Core.Application.ViewModels.LookupTables;
@using Microsoft.Extensions.Localization;
@using static DaisyPets.Core.Application.Enums.Common;

<div class="container-fluid d-md-flex flex-column">
    <div>
        <HeaderDialogComponent HeaderCaption="@HeaderCaption" ImageName="property48"></HeaderDialogComponent>
    </div>
    <EditForm Model="SelectedRecord">
        <div class="row mt-2">
            <div class="form-group">
                <SfTextBox Enabled="false"
                           Placeholder="@L["TituloNome"]"
                           CssClass="e-field  e-corner"
                           FloatLabelType="@FloatLabelType.Always"
                @bind-Value="@PetName">
                </SfTextBox>
            </div>
        </div>

        <div class="group-box">
            <SfDropDownList TValue="int" TItem="LookupTableVM" AllowFiltering="true" CssClass="e-dropdown-popup ml-5"
                            Value="@dewormerType" ShowClearButton="true" Width="250px"
                            FilterBarPlaceholder="@L["TituloSelecao"]" FilterType="Syncfusion.Blazor.DropDowns.FilterType.Contains"
                            Placeholder="@L["TituloTipo"]" DataSource="@DewormerTypes" FloatLabelType="FloatLabelType.Always">
                <DropDownListTemplates TItem="LookupTableVM">
                </DropDownListTemplates>
                <DropDownListEvents TValue="int" TItem="LookupTableVM" ValueChange="onChangeDewormer"></DropDownListEvents>
                <DropDownListFieldSettings Value="Id" Text="Descricao"></DropDownListFieldSettings>
            </SfDropDownList>
        </div>
        <div class="group-box mt-2">
            <SfDatePicker Placeholder="@L["TituloData"]"
                          CssClass="e-align-middle e-corner"
                          Width="150px"
                          FloatLabelType="FloatLabelType.Always"
            @bind-Value="@dAplicacao">
                <DatePickerEvents TValue="DateTime" ValueChange="DataAplicacaoChanged" />
            </SfDatePicker>
        </div>
        <div class="row mt-2">
            <div class="form-group">
                <SfTextBox Enabled="true"
                           Placeholder="@L["TituloMarca"]"
                           CssClass="e-field  e-corner"
                           FloatLabelType="@FloatLabelType.Always"
                @bind-Value="@SelectedRecord!.Marca">
                </SfTextBox>
            </div>
        </div>
        <div class="group-box mt-2">
            <SfDatePicker Placeholder="@L["TituloData"]"
                          CssClass="e-align-middle e-corner"
                          Width="150px"
                          FloatLabelType="FloatLabelType.Always"
            @bind-Value="@dPrxAplicacao">
                <DatePickerEvents TValue="DateTime" ValueChange="DataProxAplicacaoChanged" />
            </SfDatePicker>
        </div>

    </EditForm>
</div>

@code {

    [Inject] IConfiguration? config { get; set; }
    [Inject] ILogger<App>? logger { get; set; } = null;
    [Inject] public IStringLocalizer<App>? L { get; set; }

    [Parameter] public DesparasitanteDto? SelectedRecord { get; set; }

    [Parameter] public OpcoesRegisto EditMode { get; set; }
    [Parameter] public string? HeaderCaption { get; set; }
    [Parameter] public string? PetName { get; set; }

    protected List<LookupTableVM>? DewormerTypes { get; set; }

    protected DateTime dAplicacao { get; set; }
    protected DateTime dPrxAplicacao { get; set; }
    protected string? urlBaseAddress;

    protected int dewormerType;

    protected override void OnInitialized()
    {
        DewormerTypes = new()
        {
             new LookupTableVM(){ Id = 1, Descricao="Interno"},
             new LookupTableVM(){ Id = 2, Descricao="Externo"}
        };
    }

    protected override void OnParametersSet()
    {
        if (SelectedRecord?.Id > 0)
            dewormerType = SelectedRecord?.Tipo == "I" ? 1 : 2;
        else
            dewormerType = 1;

        if (DataFormat.IsValidDate(SelectedRecord.DataAplicacao))
        {
            dAplicacao = DateTime.Parse(SelectedRecord.DataAplicacao);
        }
        if (DataFormat.IsValidDate(SelectedRecord.DataProximaAplicacao))
        {
            dPrxAplicacao = DateTime.Parse(SelectedRecord.DataProximaAplicacao);
        }

    }

    protected void DataAplicacaoChanged(ChangedEventArgs<DateTime> args)
    {
        SelectedRecord.DataAplicacao = args.Value.ToShortDateString();
        dPrxAplicacao = args.Value.AddMonths(3);
    }

    protected void DataProxAplicacaoChanged(ChangedEventArgs<DateTime> args)
    {
        SelectedRecord.DataProximaAplicacao = args.Value.ToShortDateString();
    }

    protected void onChangeDewormer(Syncfusion.Blazor.DropDowns.ChangeEventArgs<int, LookupTableVM> args)
    {
        dewormerType = args.Value;
        if (dewormerType < 1)
            SelectedRecord.Tipo = dewormerType == 1 ? "I" : "E";
    }


}
