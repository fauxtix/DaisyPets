@using DaisyPets.Core.Application.Interfaces.Repositories;
@using DaisyPets.Web.Blazor.Features.Home.Components
@using Syncfusion.Blazor.Buttons
@inherits LayoutComponentBase
@inject IJSRuntime JS

<PageTitle>Daisy Pets</PageTitle>

<div class="page">
    <div class="sidebar">
        <NavMenuBlazored />
    </div>

    <main>
        <div class="d-flex g-3 top-row px-4 auth">
            <div class="mt-2 d-lg-block">
                <CultureSwitcher />
            </div>
        </div>
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    bool wasLanguageSelected = false;
    protected string? urlBaseAddress;
    protected string? appLanguageSelected = string.Empty;
    [Inject] IConfiguration config { get; set; }
    [Inject] HttpClient httpClient { get; set; }

    SfButton ToggleBtnObj;

    public string Content = "Light";
    protected override void OnInitialized()
    {

        urlBaseAddress = config["ApiSettings:UrlBase"];
    }

    public void changeTheme()
    {
        if (ToggleBtnObj.Content == "Light")
        {
            this.Content = "Dark";
            JS.InvokeAsync<object>("setTheme", "fluent-dark");
        }
        else
        {
            this.Content = "Light";
            JS.InvokeAsync<object>("setTheme", "fluent");
        }
    }
    private async Task<string> GetLanguage()
    {
        try
        {
            var appLanguageSettingsEndpoint = $"{urlBaseAddress}/AppUtils/Settings/Language";
            var languageSelected = await httpClient.GetStringAsync(appLanguageSettingsEndpoint);
            if (!string.IsNullOrEmpty(languageSelected))
            {
                return languageSelected;
            }
            else
                return "";
        }
        catch (Exception ex)
        {
            var x = ex.Message;
            throw;
        }
    }
}
